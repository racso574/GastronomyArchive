// <auto-generated />
using System;
using AlimentosAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GastronomyArchive.Migrations
{
    [DbContext(typeof(AlimentosContext))]
    [Migration("20240917170710_AddCantidadPersonasBaseToReceta")]
    partial class AddCantidadPersonasBaseToReceta
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AlimentosAPI.Models.Alimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Calorias")
                        .HasColumnType("integer");

                    b.Property<decimal>("Carbohidratos")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Grasas")
                        .HasColumnType("numeric");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("PesoUnidad")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Proteinas")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Alimentos");
                });

            modelBuilder.Entity("Receta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadPersonasBase")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Recetas");
                });

            modelBuilder.Entity("RecetaAlimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlimentoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("numeric");

                    b.Property<bool>("EsEnGramos")
                        .HasColumnType("boolean");

                    b.Property<int>("RecetaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AlimentoId");

                    b.HasIndex("RecetaId");

                    b.ToTable("RecetaAlimentos");
                });

            modelBuilder.Entity("RecetaAlimento", b =>
                {
                    b.HasOne("AlimentosAPI.Models.Alimento", "Alimento")
                        .WithMany()
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Receta", "Receta")
                        .WithMany("RecetaAlimentos")
                        .HasForeignKey("RecetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimento");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("Receta", b =>
                {
                    b.Navigation("RecetaAlimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
